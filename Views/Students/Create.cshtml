@model EV.ViewModel.StudentViewModel
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create New Student</h2>
<div>
    <form id="createForm" action="Create" enctype="multipart/form-data">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">

            <div class="col-md-6">
                @Html.LabelFor(x => x.StudentName, htmlAttributes: new { @class = "control-label col-md-4" })
                @Html.EditorFor(x => x.StudentName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.StudentName, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-6">
                @Html.LabelFor(x => x.Dob, htmlAttributes: new { @class = "control-label col-md-4" })
                @Html.EditorFor(x => x.Dob, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.Dob, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-6">
                @Html.LabelFor(x => x.MobileNo, htmlAttributes: new { @class = "control-label col-md-4" })
                @Html.EditorFor(x => x.MobileNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.MobileNo, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-6">
                @Html.LabelFor(x => x.IsEnrolled, htmlAttributes: new { @class = "control-label col-md-4" })
                @Html.EditorFor(x => x.IsEnrolled)
                @Html.ValidationMessageFor(x => x.IsEnrolled, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-6">
                @Html.LabelFor(x => x.CourseName, htmlAttributes: new { @class = "control-label col-md-4" })
                @Html.DropDownList("CourseId", new SelectList(Model.Courses, "CourseId", "CourseName"),
               "Select Course", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.CourseId, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-6">
                <div>
                    <label for="ProfileFile" class="btn btn-outline-dark">Uplode Image</label>
                    <input onchange="readUrl(this)" type="file" name="ProfileFile" id="ProfileFile" class="invisible" />
                </div>
                <img id="imageFile" src="~/Img/" alt="Alternate Text" width="120" />
            </div>

            <div class="col-md-12">
                <div class="Mcon">
                    @Html.Partial("_AddModule", Model.Modules)
                </div>
                <button onclick="AddModule()" type="button" class="btn btn-secondary float-end">
                    Add Module
                </button>
            </div>

        </div>

        <div>
            <a href="@Url.Action("Index","Students")" class="btn btn-warning">Back To List</a>
            <input type="submit" class="btn btn-primary" value="Save Student" />
        </div>
    </form>
</div>
<script src="~/Scripts/jquery-3.7.1.min.js"></script>
<script>
    function readUrl(i) {
        if (i.files && i.files[0]) {
            var read = new FileReader()
            read.onload = function (e) {
                $("#imageFile").attr('src', e.target.result)
            }
            read.readAsDataURL(i.files[0])
        }
    };

    function DeleteI(btn) {
        $(btn).closest('tr').remove()
    };

    function AddModule() {
        var LRI = parseInt($("#HIndex").val())
        var newRow = `
        <tr>
            <td>
                <input type="text" name="Modules[${LRI}].ModuleName"  />
            </td>
            <td>
                <input type="number" name="Modules[${LRI}].Duration" />
            </td>
            <td>
                <button onclick="DeleteI" class="btn btn-danger" type="button">
                    Remove
                </button>
            </td>
        </tr> `;

        $("#ExTable tbody").append(newRow);
        $("#HIndex").val(LRI + 1);
    }


    $("#createForm").submit(function (e) {
        e.preventDefault()
        var fData = new FormData(this)

        $.ajax({
            type: "post",
            url: "/Students/Create",
            contentType: false,
            processData: false,
            data: fData,
            success: function (Data) {
                alert('Created')
                window.location.href = "/Students/Index"
            },
            error: function (err) {
                alert('Error Occour')
            }

        })
    })



</script>
